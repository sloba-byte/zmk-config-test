/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "./keypos_40keys.h"

&lt {
    flavor = "balanced";
};

/*╭─────────────────────────┬─────────────────────────╮
  │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮     LH1 LH0 │ RH0 RH1     ╭───────────╯
              ╰─────────────┴─────────────╯             */

#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
  };

#define COMBO_6(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <6>; \
  };


/ {
    macros {
        to0key: to0key {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            label = "return_to_0_layer_and_send_key";
            bindings
                = <&to 0>
                , <&macro_param_1to1 &kp MACRO_PLACEHOLDER>
                ;
        };
        
        
        arrow: arrow {
            label = "arrow";
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&kp KP_MINUS &kp GT>;
        };
        
        brackets: brackets {
            label = "brackets";
            wait-ms = <0>;
            tap-ms = <0>;
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT>;
        };
        braces: braces {
            label = "braces";
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&kp LBRC &kp RBRC>, <&kp LEFT>;
        };
    };
    combos {
        compatible = "zmk,combos";
        
        COMBO(alt_tab, &kp LA(TAB), LT5  LT4)

        COMBO(superPaste, &kp LC(LA(V)), LB2 LB1)
        COMBO(f2rename, &kp F2, LB3 LB2)
        COMBO(pr, &kp LPAR, RT1  RT2)
        COMBO(eq, &kp EQUAL, RM1  RM2)
        COMBO(bracket, &brackets, RB1 RB2)
        COMBO(brace, &braces, LB5 RB1 RB2)
        COMBO(un, &kp UNDER, RM0 RM1)
        COMBO(excl, &kp EXCL, LB5 RM0 RM1)
        COMBO(del, &kp DEL, LB1 LB0)

        COMBO(nums,  &tog 6, LM2  LM1)
        COMBO(loadNew,  &bootloader, LH1 LH0 RH0 RH1)
        COMBO(dittoPaste, &kp LC(LS(V)), LH1 LB5 LB1)
    };


    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-on-release; 
        };

        mx: layer_tap_osl {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_OSL";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping_term_ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        li: layer_tap_intr {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_INTR";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping_term_ms = <200>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &kp TAB     &kp Q           &kp W          &kp E        &kp R        &kp T              &kp Y         &kp U         &kp I          &kp O         &kp P      &kp BSLH
// ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤
        &kp ESC     &kp A           &kp S          &kp D      &lt 1 F        &lt 3 G            &lt 4 H       &lt 2 J        &kp K         &kp L       &kp SEMI     &kp SQT
// ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤
      &kp LSHFT     &kp Z           &kp X          &kp C      &kp V          &kp B              &kp N        &kp M        &kp COMMA     &kp DOT        &kp FSLH      &tog 5
// ╰─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤
                                                            &mt LCTRL LGUI   &kp RET           &kp BSPC   &hm LGUI SPACE 
//                                                         ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };        

        lower_right_layer {
            // -----------------------------------------------------------------------------------------
            // |    |     |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | 	|     | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // |    |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp MINUS
&trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans     &trans  &trans
                        &trans  &trans  &trans  &trans
            >;
        };

        lower_left_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &trans  &trans
            >;
        };

        raise_right_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp UNDER
&trans  &trans  &trans  &trans  &trans  &trans  &kp EQUAL  &kp LBKT  &kp RBKT         &kp TILDE  &kp BSLH  &kp GRAVE
&trans  &trans  &trans  &trans  &trans  &trans  &kp PLUS   &kp LBRC  &kp RBRC         &kp PIPE   &trans    &trans
                        &trans  &trans  &trans  &trans
            >;
        };

        raise_left_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |7886^&*^(*())

            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans    &trans  &trans    &trans    &trans     &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans    &trans  &trans    &trans    &trans     &trans  &trans  &trans  &trans  &trans  &trans
                             &trans    &trans    &trans     &trans
            >;
        };

        bl_layer {
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &trans   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &trans           &trans         &trans        &trans         &trans       &trans       &trans
// ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤
    &trans         &trans        &trans         &trans         &trans        &trans           &trans         &trans        &trans         &trans       &trans       &trans 
// ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤
    &trans         &trans        &trans         &trans         &trans        &trans           &trans         &trans        &trans         &trans       &trans       &trans
// ╰─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤
                                                               &trans      &trans        &trans     &trans    
//                                                         ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        nums {
            bindings = <
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp TILDE      &kp N1        &kp N2         &kp N3         &kp N4        &kp N5           &kp N6        &kp N7         &kp N8        &kp N9        &kp N0      &kp MINUS
     // ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤
         &to0key ESC    &to0key A       &to0key S    &to0key D    &to0key F     &to0key G          &kp LEFT      &kp DOWN       &kp UP       &kp RIGHT    &to0key SEMI   &to0key SQT
     // ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤
          &trans        &to0key Z       &to0key X   &to0key C       &to0key V   &to0key B           &to0key N   &to0key M    &to0key COMMA  &to0key DOT  &to0key FSLH     &trans
     // ╰─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┬─────────────┼─────────────┼─────────────┼─────────────┤
                                                                    &trans       &to0key RET       &trans      &to0key SPACE   
     //                                                         ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };
    };
};
